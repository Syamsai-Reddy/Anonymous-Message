"use strict";(()=>{var e={};e.id=320,e.ids=[320],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},19831:(e,r,s)=>{s.r(r),s.d(r,{originalPathname:()=>y,patchFetch:()=>m,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>f,staticGenerationAsyncStorage:()=>l});var t={};s.r(t),s.d(t,{POST:()=>c});var i=s(49303),o=s(88716),n=s(60670),a=s(79297),u=s(60109);async function c(e){await (0,a.Z)();try{let{username:r,code:s}=await e.json();console.log(s,r);let t=decodeURIComponent(r),i=await u.Z.findOne({username:t});if(!i)return Response.json({success:!1,message:"User not found"},{status:404});let o=i.verifyCode===s,n=new Date(i.verifyCodeExpiry)>new Date;if(o&&n)return i.isVerified=!0,await i.save(),Response.json({success:!0,message:"Account verified successfully"},{status:200});if(!n)return Response.json({success:!1,message:"Verification code has expired. Please sign up again to get a new code."},{status:400});return Response.json({success:!1,message:"Incorrect verification code"},{status:400})}catch(e){return console.error("Error verifying user:",e),Response.json({success:!1,message:"Error verifying user"},{status:500})}}let d=new i.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/verify-code/route",pathname:"/api/verify-code",filename:"route",bundlePath:"app/api/verify-code/route"},resolvedPagePath:"C:\\Users\\Dell\\Desktop\\anonymous-message\\src\\app\\api\\verify-code\\route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:f}=d,y="/api/verify-code/route";function m(){return(0,n.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:l})}},49303:(e,r,s)=>{e.exports=s(30517)},79297:(e,r,s)=>{s.d(r,{Z:()=>n});var t=s(11185),i=s.n(t);let o={},n=async function(){if(o.isConnected){console.log("Alredy connected to the database");return}try{let e=await i().connect(process.env.MONGODB_URI||"",{});o.isConnected=e.connections[0].readyState,console.log("Database connected successfully")}catch(e){console.error("Database connection failed:",e),process.exit(1)}}},60109:(e,r,s)=>{s.d(r,{Z:()=>a});var t=s(11185),i=s.n(t);let o=new(i()).Schema({content:{type:String,required:!0},createdAt:{type:Date,required:!0,default:Date.now}}),n=new(i()).Schema({username:{type:String,required:[!0,"Username is required"],trim:!0,unique:!0},email:{type:String,required:[!0,"Email is required"],unique:!0,match:[/.+\@.+\..+/,"Please use a valid email address"]},password:{type:String,required:[!0,"Password is required"]},verifyCode:{type:String,required:[!0,"Verify Code is required"]},verifyCodeExpiry:{type:Date,required:[!0,"Verify Code Expiry is required"]},isVerified:{type:Boolean,default:!1},isAcceptingMessages:{type:Boolean,default:!0},messages:[o]}),a=i().models.User||i().model("User",n)}};var r=require("../../../webpack-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[948],()=>s(19831));module.exports=t})();